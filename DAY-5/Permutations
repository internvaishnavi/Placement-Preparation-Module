class Solution {
    public void permutations(List<List<Integer>> lst,List<Integer> perm,boolean[] visited,int[] nums){
        if(perm.size()==nums.length){
            lst.add(new ArrayList(perm));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(visited[i]==true) continue;
            perm.add(nums[i]);
            visited[i]= true;
            permutations(lst,perm,visited,nums);
            perm.remove(perm.size()-1);
            visited[i]=false;
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> lst=new ArrayList<>();
        boolean[] visited=new boolean[nums.length];
        permutations(lst,new ArrayList(),visited,nums);
        return lst;
    }
}
