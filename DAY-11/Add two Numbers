/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head=null;
        ListNode temp=null;
        int carry=0;
        while(l1!=null && l2!=null){
            ListNode node;
            int val=l1.val+l2.val+carry;
            if(val>9){
                node=new ListNode(val%10);
                carry=val/10;
            }
            else{
                node=new ListNode(val%10);
                carry=0;
            }
            if(head==null){
                head=node;
                temp=head;
            }
            else{
                temp.next=node;
                temp=temp.next;
            }
            // temp=temp.next;
            l1=l1.next;
            l2=l2.next;
        }
        while(l1!=null){
            int val=l1.val+carry;
            ListNode node=new ListNode(val%10);
            carry=val/10;
            // node.val=l1.val;
            temp.next=node;
            temp=temp.next;
            l1=l1.next;
        }
        while(l2!=null){
              int val=l2.val+carry;
            ListNode node=new ListNode(val%10);
            carry=val/10;
            // ListNode node=new ListNode(l2.val);
            // temp.val=l2.val;
            temp.next=node;
            temp=temp.next;
            l2=l2.next;
        }
        if(carry!=0){
            ListNode node=new ListNode(carry);
            temp.next=node;
        }
        return head;
    }
}
